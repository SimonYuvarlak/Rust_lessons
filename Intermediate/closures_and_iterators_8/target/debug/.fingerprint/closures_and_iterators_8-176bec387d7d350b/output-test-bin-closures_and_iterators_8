{"message":"unresolved import `rand`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":4887,"byte_end":4891,"line_start":101,"line_end":101,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    use rand::Rng; // import the rand crate to use random number generation","highlight_start":9,"highlight_end":13}],"label":"use of undeclared crate or module `rand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `rand`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:101:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use rand::Rng; // import the rand crate to use random number generation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rand`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `rand`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":4974,"byte_end":4978,"line_start":102,"line_end":102,"column_start":19,"column_end":23,"is_primary":true,"text":[{"text":"    let mut rng = rand::thread_rng(); // create a random number generator","highlight_start":19,"highlight_end":23}],"label":"use of undeclared crate or module `rand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `rand`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:102:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut rng = rand::thread_rng(); // create a random number generator\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rand`\u001b[0m\n\n"}
{"message":"`[closure@src\\main.rs:104:23: 104:35]` is not an iterator","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":5414,"byte_end":5418,"line_start":109,"line_end":109,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    for name in random_name.take(10) {","highlight_start":29,"highlight_end":33}],"label":"`[closure@src\\main.rs:104:23: 104:35]` is not an iterator","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":5143,"byte_end":5155,"line_start":104,"line_end":104,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"    let random_name = || -> String {","highlight_start":23,"highlight_end":35}],"label":"doesn't satisfy `_: Iterator`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`[closure@src\\main.rs:104:23: 104:35]: Iterator`\nwhich is required by `&mut [closure@src\\main.rs:104:23: 104:35]: Iterator`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `[closure@src\\main.rs:104:23: 104:35]` is not an iterator\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:109:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let random_name = || -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Iterator`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for name in random_name.take(10) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`[closure@src\\main.rs:104:23: 104:35]` is not an iterator\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `[closure@src\\main.rs:104:23: 104:35]: Iterator`\u001b[0m\n\u001b[0m            which is required by `&mut [closure@src\\main.rs:104:23: 104:35]: Iterator`\u001b[0m\n\n"}
{"message":"type mismatch in closure arguments","code":{"code":"E0631","explanation":"This error indicates a type mismatch in closure arguments.\n\nErroneous code example:\n\n```compile_fail,E0631\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: &str| {});\n}\n```\n\nThe error occurs because `foo` accepts a closure that takes an `i32` argument,\nbut in `main`, it is passed a closure with a `&str` argument.\n\nThis can be resolved by changing the type annotation or removing it entirely\nif it can be inferred.\n\n```\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: i32| {});\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":6519,"byte_end":6527,"line_start":134,"line_end":134,"column_start":57,"column_end":65,"is_primary":true,"text":[{"text":"    let prime_numbers: Vec<i32> = numbers.iter().filter(is_prime).cloned().collect();","highlight_start":57,"highlight_end":65}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":5925,"byte_end":5942,"line_start":119,"line_end":119,"column_start":20,"column_end":37,"is_primary":false,"text":[{"text":"    let is_prime = |x: &i32| -> bool {","highlight_start":20,"highlight_end":37}],"label":"found signature defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":6512,"byte_end":6518,"line_start":134,"line_end":134,"column_start":50,"column_end":56,"is_primary":false,"text":[{"text":"    let prime_numbers: Vec<i32> = numbers.iter().filter(is_prime).cloned().collect();","highlight_start":50,"highlight_end":56}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected closure signature `for<'r> fn(&'r &{integer}) -> _`\n   found closure signature `for<'r> fn(&'r i32) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `filter`","code":null,"level":"note","spans":[{"file_name":"src\\main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\arday\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\traits\\iterator.rs","byte_start":30683,"byte_end":30709,"line_start":899,"line_end":899,"column_start":12,"column_end":38,"is_primary":true,"text":[{"text":"        P: FnMut(&Self::Item) -> bool,","highlight_start":12,"highlight_end":38}],"label":"required by this bound in `filter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0631]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type mismatch in closure arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:134:57\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let is_prime = |x: &i32| -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfound signature defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let prime_numbers: Vec<i32> = numbers.iter().filter(is_prime).cloned().collect();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected due to this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected closure signature `for<'r> fn(\u001b[0m\u001b[0m\u001b[1m&'r &{integer}\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found closure signature `for<'r> fn(\u001b[0m\u001b[0m\u001b[1m&'r i32\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `filter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\arday\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\traits\\iterator.rs:899:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        P: FnMut(&Self::Item) -> bool,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `filter`\u001b[0m\n\n"}
{"message":"the method `cloned` exists for struct `Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":6529,"byte_end":6535,"line_start":134,"line_end":134,"column_start":67,"column_end":73,"is_primary":true,"text":[{"text":"    let prime_numbers: Vec<i32> = numbers.iter().filter(is_prime).cloned().collect();","highlight_start":67,"highlight_end":73}],"label":"method cannot be called on `Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":5925,"byte_end":5942,"line_start":119,"line_end":119,"column_start":20,"column_end":37,"is_primary":false,"text":[{"text":"    let is_prime = |x: &i32| -> bool {","highlight_start":20,"highlight_end":37}],"label":"doesn't satisfy `<_ as FnOnce<(&&{integer},)>>::Output = bool`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":5925,"byte_end":5942,"line_start":119,"line_end":119,"column_start":20,"column_end":37,"is_primary":false,"text":[{"text":"    let is_prime = |x: &i32| -> bool {","highlight_start":20,"highlight_end":37}],"label":"doesn't satisfy `_: FnMut<(&&{integer},)>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\arday\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\adapters\\filter.rs","byte_start":496,"byte_end":519,"line_start":15,"line_end":15,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct Filter<I, P> {","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: Iterator`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`<[closure@src\\main.rs:119:20: 119:37] as FnOnce<(&&{integer},)>>::Output = bool`\nwhich is required by `Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>: Iterator`\n`[closure@src\\main.rs:119:20: 119:37]: FnMut<(&&{integer},)>`\nwhich is required by `Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>: Iterator`\n`Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>: Iterator`\nwhich is required by `&mut Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>: Iterator`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `cloned` exists for struct `Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:134:67\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let is_prime = |x: &i32| -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `<_ as FnOnce<(&&{integer},)>>::Output = bool`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: FnMut<(&&{integer},)>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let prime_numbers: Vec<i32> = numbers.iter().filter(is_prime).cloned().collect();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\arday\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\adapters\\filter.rs:15:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Filter<I, P> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Iterator`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `<[closure@src\\main.rs:119:20: 119:37] as FnOnce<(&&{integer},)>>::Output = bool`\u001b[0m\n\u001b[0m            which is required by `Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>: Iterator`\u001b[0m\n\u001b[0m            `[closure@src\\main.rs:119:20: 119:37]: FnMut<(&&{integer},)>`\u001b[0m\n\u001b[0m            which is required by `Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>: Iterator`\u001b[0m\n\u001b[0m            `Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>: Iterator`\u001b[0m\n\u001b[0m            which is required by `&mut Filter<std::slice::Iter<'_, {integer}>, [closure@src\\main.rs:119:20: 119:37]>: Iterator`\u001b[0m\n\n"}
{"message":"type mismatch in closure arguments","code":{"code":"E0631","explanation":"This error indicates a type mismatch in closure arguments.\n\nErroneous code example:\n\n```compile_fail,E0631\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: &str| {});\n}\n```\n\nThe error occurs because `foo` accepts a closure that takes an `i32` argument,\nbut in `main`, it is passed a closure with a `&str` argument.\n\nThis can be resolved by changing the type annotation or removing it entirely\nif it can be inferred.\n\n```\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: i32| {});\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":7373,"byte_end":7380,"line_start":147,"line_end":147,"column_start":56,"column_end":63,"is_primary":true,"text":[{"text":"    let reversed_words: Vec<String> = words.iter().map(reverse).collect();","highlight_start":56,"highlight_end":63}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":7092,"byte_end":7111,"line_start":143,"line_end":143,"column_start":19,"column_end":38,"is_primary":false,"text":[{"text":"    let reverse = |s: &str| -> String {","highlight_start":19,"highlight_end":38}],"label":"found signature defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":7369,"byte_end":7372,"line_start":147,"line_end":147,"column_start":52,"column_end":55,"is_primary":false,"text":[{"text":"    let reversed_words: Vec<String> = words.iter().map(reverse).collect();","highlight_start":52,"highlight_end":55}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected closure signature `fn(&&str) -> _`\n   found closure signature `for<'r> fn(&'r str) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `map`","code":null,"level":"note","spans":[{"file_name":"src\\main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\arday\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\traits\\iterator.rs","byte_start":27029,"byte_end":27051,"line_start":779,"line_end":779,"column_start":12,"column_end":34,"is_primary":true,"text":[{"text":"        F: FnMut(Self::Item) -> B,","highlight_start":12,"highlight_end":34}],"label":"required by this bound in `map`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0631]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type mismatch in closure arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:147:56\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let reverse = |s: &str| -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfound signature defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let reversed_words: Vec<String> = words.iter().map(reverse).collect();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected due to this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected closure signature `fn(\u001b[0m\u001b[0m\u001b[1m&&str\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found closure signature `\u001b[0m\u001b[0m\u001b[1mfor<'r> \u001b[0m\u001b[0mfn(\u001b[0m\u001b[0m\u001b[1m&'r str\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `map`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\arday\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\traits\\iterator.rs:779:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m779\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnMut(Self::Item) -> B,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `map`\u001b[0m\n\n"}
{"message":"the method `collect` exists for struct `Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":7382,"byte_end":7389,"line_start":147,"line_end":147,"column_start":65,"column_end":72,"is_primary":true,"text":[{"text":"    let reversed_words: Vec<String> = words.iter().map(reverse).collect();","highlight_start":65,"highlight_end":72}],"label":"method cannot be called on `Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":7092,"byte_end":7111,"line_start":143,"line_end":143,"column_start":19,"column_end":38,"is_primary":false,"text":[{"text":"    let reverse = |s: &str| -> String {","highlight_start":19,"highlight_end":38}],"label":"doesn't satisfy `<_ as FnOnce<(&&str,)>>::Output = _`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":7092,"byte_end":7111,"line_start":143,"line_end":143,"column_start":19,"column_end":38,"is_primary":false,"text":[{"text":"    let reverse = |s: &str| -> String {","highlight_start":19,"highlight_end":38}],"label":"doesn't satisfy `_: FnMut<(&&str,)>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\arday\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\adapters\\map.rs","byte_start":1982,"byte_end":2002,"line_start":61,"line_end":61,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub struct Map<I, F> {","highlight_start":1,"highlight_end":21}],"label":"doesn't satisfy `_: Iterator`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`<[closure@src\\main.rs:143:19: 143:38] as FnOnce<(&&str,)>>::Output = _`\nwhich is required by `Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>: Iterator`\n`[closure@src\\main.rs:143:19: 143:38]: FnMut<(&&str,)>`\nwhich is required by `Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>: Iterator`\n`Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>: Iterator`\nwhich is required by `&mut Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>: Iterator`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `collect` exists for struct `Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:147:65\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let reverse = |s: &str| -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `<_ as FnOnce<(&&str,)>>::Output = _`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: FnMut<(&&str,)>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let reversed_words: Vec<String> = words.iter().map(reverse).collect();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\arday\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\adapters\\map.rs:61:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m61\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Map<I, F> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: Iterator`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `<[closure@src\\main.rs:143:19: 143:38] as FnOnce<(&&str,)>>::Output = _`\u001b[0m\n\u001b[0m            which is required by `Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>: Iterator`\u001b[0m\n\u001b[0m            `[closure@src\\main.rs:143:19: 143:38]: FnMut<(&&str,)>`\u001b[0m\n\u001b[0m            which is required by `Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>: Iterator`\u001b[0m\n\u001b[0m            `Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>: Iterator`\u001b[0m\n\u001b[0m            which is required by `&mut Map<std::slice::Iter<'_, &str>, [closure@src\\main.rs:143:19: 143:38]>: Iterator`\u001b[0m\n\n"}
{"message":"aborting due to 7 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 7 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0432, E0433, E0599, E0631.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0432, E0433, E0599, E0631.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0432`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0432`.\u001b[0m\n"}
